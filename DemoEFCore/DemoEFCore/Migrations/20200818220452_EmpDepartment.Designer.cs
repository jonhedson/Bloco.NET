// <auto-generated />
using System;
using DemoEFCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoEFCore.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20200818220452_EmpDepartment")]
    partial class EmpDepartment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoEFCore.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phoneno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DemoEFCore.Models.CustomerAddress", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("DemoEFCore.Models.DbTypeTest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("TestByte")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("TestByteA")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte?>("TestByteNull")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("TestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TestDateTimeNull")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TestDecimal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TestDecimalNull")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TestDouble")
                        .HasColumnType("float");

                    b.Property<double?>("TestDoubleNull")
                        .HasColumnType("float");

                    b.Property<int?>("TestIntNull")
                        .HasColumnType("int");

                    b.Property<short>("TestShort")
                        .HasColumnType("smallint");

                    b.Property<string>("TestString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestUShort")
                        .HasColumnType("int");

                    b.Property<long>("TestUnit")
                        .HasColumnType("bigint");

                    b.Property<long?>("TestUnitNull")
                        .HasColumnType("bigint");

                    b.Property<bool>("Testbool")
                        .HasColumnType("bit");

                    b.Property<bool?>("TestboolNull")
                        .HasColumnType("bit");

                    b.Property<int>("Testint")
                        .HasColumnType("int");

                    b.Property<string>("testChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("id");

                    b.ToTable("DbTypeTests");
                });

            modelBuilder.Entity("DemoEFCore.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DemoEFCore.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DemoEFCore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DemoEFCore.Models.CustomerAddress", b =>
                {
                    b.HasOne("DemoEFCore.Models.Customer", "Customer")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("DemoEFCore.Models.CustomerAddress", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemoEFCore.Models.Employee", b =>
                {
                    b.HasOne("DemoEFCore.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
